⭐️참고
  컴포넌트 스캔을 사용하면 @Configuration이 붙은 설정 정보도 자동으로 등록되기 때문에, 
  AppConfig, TestConfig 등 앞서 만들어두었던 설정 정보도 함께 등록되고 실행 되어 버림
  그래서 excludeFilters를 이용해서 설정정보는 컴포넌트 스캔 대상에서 제외
  기존 예제 코드를 최대한 남기고 유지하기 위해서 이 방법을 선택

🔎 컴포넌트 스캔은 이름 그대로 @Component 애노테이션이 붙은 클래스를 스캔해서 스프링 빈으로 등록함
   각 클래스가 컴포넌트 스캔의 대상이 되도록 @Component 애노테이션을 붙여줌

🔎 AppConfig에서는 @Bean으로 직접 설정 정보를 작성했고, 의존관계도 직접 명시함
   @Autowired는 의존관계를 자동으로 주입해줌 

1️⃣ @ComponentScan
   @ComponentScan은 @Component가 붙은 모든 클래스를 스프링 빈으로 등록함
   스프링 빈의 기본 이름은 클래스명을 사용하되 맨 앞글자만 소문자를 사용

2️⃣ @Autowired 의존관계 자동 주입
   생성자에 @Autowired를 지정하면, 스프링 컨테이너가 자동으로 해당 스프링 빈을 찾아서 주입함
   이때 기본 조회 전략은 타입이 같은 빈을 찾아서 주입함
   `getBean(MemberRepository.class)` 와 동일하다고 이해
