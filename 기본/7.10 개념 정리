1. 필드 주입 방식이 일반적으로 권장되지 않는 이유는?
   순수 JAVA 코드로 테스트하기 어려워서
   필드 주입은 외부에서 의존성을 주입하기 어려워 순수 JAVA 테스트가 힘들어짐, 또한 final 키워드를 사용할 수 없어 불변성을 보장하기 어렵다는 단점 존재

2. @Autowired로 의존성을 주입할 때, Bean이 없는 경우 예외가 발생하지 않도록 처리하는 방법과 거리가 먼 것은?
   @Primary 애노테이션 사용
   @Primary는 동일 타입 Bean이 여러 개일 때 우선적으로 선택될 Bean을 지정함
   Bean이 아예 없을 때 오류를 막는 역할은 required=false, @Nullable, Optional이 수행함
   
3. @Autowired 사용 시 같은 타입의 Bean이 여러 개 있을 때, Spring이 의존성을 해결하는 방법 중 우선순위가 가장 높은 것은?
   @Qualifier 사용
   Spring은 동일 타입 Bean이 여러 개일 때 @Qualifier가 붙은 Bean을 가장 먼저 찾음
   그 다음 @Primary, 마지막으로 필드나 파라미터 이름으로 매칭

4. final 필드를 매개변수로 하는 생성자를 자동 생성하여 생성자 주입 코드를 간소화해주는 Lombok 애노테이션은 무엇인가?
   @RequriedArgsConstructor
   이 애노테이션은 클래스의 final 필드들을 모아 자동으로 생성자를 만들어줌
   반복적인 생성자 코드를 줄여주어 코드를 간결하게 만들 수 있음

5. @Autowired를 사용하여 특정 타입의 모든 Spring Bean들을 한번에 주입받고자 할 때, 주로 사용되는 컬렉션 타입은?
   List 또는 Map
   Spring 컨테이너는 특정 타입의 모든 Bean들을 List나 Map 형태로 주입하는 기능을 지원함
   이를 통해 여러 구현체 중 하나를 동적으로 선택하는 전략 패턴 등을 쉽게 구현 가능
