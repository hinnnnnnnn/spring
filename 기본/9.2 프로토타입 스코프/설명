싱글톤 스코프의 빈을 조회하면 스프링 컨테이너는 항상 같은 인스턴스의 스프링 빈을 반환함
반면에 프로토타입 스코프를 스프링 컨테이너에 조회하면 컨테이너는 항상 새로운 인스턴스를 생성해서 반환함

싱글톤 빈 요청
1. 싱글톤 스코프의 빈을 스프링 컨테이너에 요청함
2. 스프링 컨테이너는 본인이 관리하는 스프링 빈을 반환함
3. 이후에 스프링 컨테이너에 같은 요청이 와도 같은 객체 인스턴스의 스프링 빈을 반환함

프로토타입 빈 요청1
1. 프로토타입 스코프의 빈을 스프링 컨테이너에 요청함
2. 스프링 컨테이너는 이 시점에 프로토타입 빈을 생성하고, 필요한 의존관계를 주입함

프로토타입 빈 요청2
3. 스프링 컨테이너는 생성한 프로토타입 빈을 클라이언트에 반환함
4. 이후에 스프링 컨테이너에 같은 요청이 오면 항상 새로운 프로토타입 빈을 생성해서 반환함

정리
핵심은 스프링 컨테이너는 프로토타입 빈을 생성하고, 의존관계 주입, 초기화까지만 처리함
클라이언트에 빈을 반환하고, 이후 스프링 컨테이너는 생성된 프로토타입 빈을 관리하지 않은
프로토타입 빈을 관리할 책임은 프로토타입 빈을 받은 클라이언트에 있음
@PreDestory 같은 종료 메서드가 호출되지 않음










