1. Model (모델)
• 데이터와 비즈니스 로직을 담당합니다.
• 애플리케이션의 핵심 정보(예: DB 데이터, 계산, 상태 등)를 저장하고 관리합니다.
• 데이터의 변경이 일어나면 View에 알리는 역할도 합니다.
예: 게시판 글, 사용자 정보, 쇼핑몰의 상품 목록 등
💬 쉽게 말하면: 실제 데이터를 담고 처리하는 뇌 역할

2. View (뷰)
• 사용자에게 **정보를 보여주는 역할(UI)**입니다.
• 모델의 데이터를 기반으로 화면에 출력되는 형태를 결정합니다.
• 사용자 인터페이스(UI)만 담당하고, 로직은 포함하지 않습니다.
예: HTML 화면, 앱 화면, 사용자에게 보이는 버튼이나 표 등
💬 쉽게 말하면: 사용자에게 보여지는 화면 (눈 역할)

3. Controller (컨트롤러)
• 사용자의 입력을 받아 적절한 모델과 뷰를 연결해 주는 중간 관리자입니다.
• 사용자의 요청(클릭, 입력 등)을 처리하고, 그에 맞는 로직(Model)을 실행한 뒤 View에 결과를 전달합니다.
예: 사용자가 로그인 버튼을 클릭 → 컨트롤러가 로그인 요청 처리 → 결과에 따라 다른 화면(View) 출력
💬 쉽게 말하면: 사용자의 행동을 해석하고 지시하는 지휘자 (손 역할)

🔁 작동 흐름 예시
1.사용자가 로그인 버튼 클릭 (View)
2.클릭 이벤트가 Controller로 전달됨
3.Controller는 Model에 로그인 요청
4.Model이 DB에서 정보를 확인
5.결과를 Controller에 전달
6.Controller는 그 결과를 기반으로 View를 선택하여 사용자에게 표시
