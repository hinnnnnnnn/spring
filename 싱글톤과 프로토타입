✅ 싱글톤 (Singleton) – 🔧 자바 디자인 패턴, 딱 한 개만!
자바에서 디자인 패턴 중 하나로 나온 개념
목적: 어떤 클래스든 객체를 딱 1개만 만들고 전역에서 공유하게 하자!

스프링이 처음에 한 번만 객체를 만들어서, 모든 곳에서 그 한 객체만 계속 씀.

@Service
public class MyService {
    // 스프링이 MyService를 딱 1개만 만들어서 계속 사용함
}

🧠 예시: 프린터 한 대를 여러 사람이 같이 쓰는 느낌, count 같은 상태가 바뀌면, 다른 사람도 그 변경을 함께 보게 됨

====================================================================================================================== 
🌀 프로토타입(Prototype) – 🌱 스프링에서만 나오는 빈 스코프 개념, 매번 새로!
요청할 때마다 새 객체를 만들어줌.
하지만 스프링은 만들기만 하고 더 이상 관리하진 않음..
스프링에서는 @Scope("prototype")을 지정하면, 빈을 매번 새로 만듬
즉, 스프링 컨테이너가 제공하는 특별한 객체 관리 방식

@Scope("prototype")
@Component
public class MyPrototypeBean {
    // 누가 요청할 때마다 새로운 객체가 만들어짐
}

🧠 예시:프린터를 요청할 때마다 새로 뽑아주는 느낌 (사람마다 자기만의 프린터가 생김)

